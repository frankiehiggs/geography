# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_points.ipynb.

# %% auto 0
__all__ = ['rng', 'h', 'update', 'find_next']

# %% ../nbs/01_points.ipynb 3
import numpy as np
from fastcore.basics import patch

# %% ../nbs/01_points.ipynb 5
rng = np.random.default_rng()

def h(x: np.array, al=1.2):
    """kernel function"""
    return np.exp(-al*x)

def update(f, t):
    def g(x:np.array):
        return f(x)+h(x-t)*(x>=t)
    return g

def find_next(f,points, t):
    ids = np.lexsort((points[:,0],))
    p_sort = points[ids]
    x, y = np.split(p_sort, 2, axis=1) # x is sorted
    fx = f(x)*(x>=t)
    idx = np.argmax(y<=fx) 
    # return idx where first true occurs, or if 0 retured, 
    # check whether it's because of all false, or truly 0
    # TODO: test the logic is correct
    return idx if x[idx]>=t and fx[idx]>0 else None


